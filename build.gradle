plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-compose' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
}

group = 'com.mitchharris'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    compile("org.springframework.boot:spring-boot-starter-actuator")
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation('org.springframework.boot:spring-boot-starter-test'){
        exclude group: 'junit', module: 'junit' //by both name and group
    }
    testImplementation "org.testcontainers:postgresql:1.13.0"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    testCompile group: 'uk.co.jemos.podam', name: 'podam', version: '7.2.3.RELEASE'
}

test {
    useJUnitPlatform()
}

task serviceTest {
    dependsOn("cleanTest")
    dependsOn(":serviceTest:test")
    tasks.findByName('cleanTest').mustRunAfter(':serviceTest:test')
}

docker {
    dependsOn build
    name 'mitchharris/word-counter'
    files bootJar.archiveFile
    buildArgs([JAR_FILE: "${bootJar.archiveFileName.get()}"])
}

dockerCompose {
    template 'docker-compose.template.yml'
    dockerComposeFile 'docker-compose.yml'
}

dockerComposeUp {
    dependsOn 'dockerClean'
    dependsOn 'dockerTag'
    dependsOn 'generateDockerCompose'
    tasks.findByName('dockerTag').mustRunAfter('dockerClean')
    tasks.findByName('generateDockerCompose').mustRunAfter('dockerTag')
}
